---
- name: Configure MikroTik CHR devices
  hosts: all
  gather_facts: false
  connection: community.routeros.api
  vars:
    router_ids:
      chr1: 1.1.1.1
      chr2: 2.2.2.2
    ntp_primary: "pool.ntp.org"
    ospf_area: "backbone"
    ospf_network: "10.0.0.0/24"
    current_password: "admin"
    new_password: "admin"

  tasks:
    - name: Change admin password
      community.routeros.command:
        commands:
          - "/user set admin password={{ new_password }}"
      vars:
        ansible_password: "{{ current_password }}"
      no_log: false

    - name: Configure NTP
      community.routeros.command:
        commands:
          - "/system ntp client set enabled=yes"
      vars:
        ansible_password: "{{ new_password }}"

    - name: Configure OSPF Instance
      community.routeros.command:
        commands:
          - "/routing ospf instance set [ find default=yes ] router-id={{ router_ids[inventory_hostname] }}"
          - "/interface bridge add name=lo"
          - "/ip address add address={{ router_ids[inventory_hostname] }}/32 interface=lo"
          - "/routing ospf instance add name=v2inst version=2 router-id={{ router_ids[inventory_hostname] }}"
          - "/routing ospf area add name=backbone_v2 area-id=0.0.0.0 instance=v2inst"
          - "/routing ospf interface-template add network=0.0.0.0/0 area=backbone_v2"
      vars:
        ansible_password: "{{ new_password }}"

    - name: Collect OSPF information
      community.routeros.command:
        commands:
          - "/routing ospf neighbor print"
          - "/routing ospf instance print"
          - "/routing ospf interface print"
      vars:
        ansible_password: "{{ new_password }}"
      register: ospf_data

    - name: Save OSPF output
      ansible.builtin.copy:
        content: "{{ ospf_data.stdout | to_nice_json }}"
        dest: "./ospf_info_{{ inventory_hostname }}.json"

    - name: Get full config
      community.routeros.command:
        commands:
          - "/export"
      vars:
        ansible_password: "{{ new_password }}"
      register: full_config

    - name: Save configuration
      ansible.builtin.copy:
        content: "{{ full_config.stdout }}"
        dest: "./config_backup_{{ inventory_hostname }}.rsc"
